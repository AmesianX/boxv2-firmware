Index: procd-2015-08-16/watchdog.c
===================================================================
--- procd-2015-08-16.orig/watchdog.c
+++ procd-2015-08-16/watchdog.c
@@ -26,11 +26,11 @@
 #include "procd.h"
 #include "watchdog.h"
 
-#define WDT_PATH	"/dev/watchdog"
+#define WDT_INTERVAL 17
 
 static struct uloop_timeout wdt_timeout;
 static int wdt_fd = -1;
-static int wdt_frequency = 5;
+static int wdt_frequency = WDT_INTERVAL;
 
 void watchdog_ping(void)
 {
@@ -42,7 +42,7 @@ void watchdog_ping(void)
 static void watchdog_timeout_cb(struct uloop_timeout *t)
 {
 	watchdog_ping();
-	uloop_timeout_set(t, wdt_frequency * 1000);
+	uloop_timeout_set(t, wdt_frequency * 800);
 }
 
 void watchdog_set_stopped(bool val)
@@ -109,7 +109,7 @@ void watchdog_init(int preinit)
 		wdt_fd = atoi(env);
 		unsetenv("WDTFD");
 	} else {
-		wdt_fd = open("/dev/watchdog", O_WRONLY);
+		wdt_fd = open("/dev/comcerto_wdt", O_WRONLY);
 	}
 
 	if (wdt_fd < 0)
@@ -119,10 +119,10 @@ void watchdog_init(int preinit)
 		fcntl(wdt_fd, F_SETFD, fcntl(wdt_fd, F_GETFD) | FD_CLOEXEC);
 
 	LOG("- watchdog -\n");
-	watchdog_timeout(30);
+	watchdog_timeout(WDT_INTERVAL);
 	watchdog_timeout_cb(&wdt_timeout);
 
-	DEBUG(4, "Opened watchdog with timeout %ds\n", watchdog_timeout(0));
+	LOG("Opened watchdog with timeout %d s\n", watchdog_timeout(0));
 }
 
 
